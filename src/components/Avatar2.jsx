/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 public/models/chibi.glb 
*/

import React, { useEffect, useRef } from 'react'
import { useGraph, useFrame } from '@react-three/fiber'
import { useAnimations, useFBX, useGLTF } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import * as THREE from "three";

export function Avatar2(props) {
  const group = useRef();

  const { scene } = useGLTF('models/chibi.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  
  const {animations: standingAnimation } = useFBX("animations/Idle.fbx");

  standingAnimation[0].name = "Standing"

  const { actions } = useAnimations(standingAnimation, group)

  // follow the cursor
  useFrame((state) => {
    const target = new THREE.Vector3(state.mouse.x, state.mouse.y, 1);
    group.current.getObjectByName("Neck").lookAt(target);
  });

  useEffect(() => {
    actions["Standing"].reset().play();
  }, [])

  return (
    <group {...props} ref={group} dispose={null}>
      <group >
        <primitive object={nodes.Hips} />
        <skinnedMesh geometry={nodes.body.geometry} material={materials.mini_material} skeleton={nodes.body.skeleton} />
        <skinnedMesh geometry={nodes.head.geometry} material={materials.mini_material} skeleton={nodes.head.skeleton} />
        <skinnedMesh geometry={nodes.cap_1.geometry} material={materials.mini_material} skeleton={nodes.cap_1.skeleton} />
        <skinnedMesh geometry={nodes.cap_2.geometry} material={materials.mini_material_secondary} skeleton={nodes.cap_2.skeleton} />
        <skinnedMesh name="eyes_1" geometry={nodes.eyes_1.geometry} material={materials.mini_material} skeleton={nodes.eyes_1.skeleton} morphTargetDictionary={nodes.eyes_1.morphTargetDictionary} morphTargetInfluences={nodes.eyes_1.morphTargetInfluences} />
        <skinnedMesh name="eyes_2" geometry={nodes.eyes_2.geometry} material={materials.mini_material_secondary} skeleton={nodes.eyes_2.skeleton} morphTargetDictionary={nodes.eyes_2.morphTargetDictionary} morphTargetInfluences={nodes.eyes_2.morphTargetInfluences} />
      </group>
    </group>
  )
}

useGLTF.preload('models/chibi.glb')
